FROM ros:humble as build

RUN git clone https://github.com/Slamtec/rplidar_sdk.git /tmp/rplidar_sdk
RUN (cd /tmp/rplidar_sdk && make)

FROM ros:humble
COPY --from=build /tmp/rplidar_sdk/output/Linux/Release/simple_grabber /usr/local/bin/

RUN DEBIAN_FRONTEND=noninteractive apt-get -y -q update && \
    DEBIAN_FRONTEND=noninteractive apt-get -y -q --no-install-recommends install \
        ca-certificates curl gnupg && \
        rm -rf /var/lib/apt/lists/*

RUN install -m 0755 -d /etc/apt/keyrings && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --yes --dearmor -o /etc/apt/keyrings/docker.gpg && \
    chmod a+r /etc/apt/keyrings/docker.gpg && \
    echo \
      "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
      "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
      tee /etc/apt/sources.list.d/docker.list > /dev/null

RUN DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a apt-get -y -q update && \
    DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a apt-get -y -q --no-install-recommends install \
        jq \
        git \
        curl \
        udev \
        potrace \
        iproute2 \
        usbutils \
        dmidecode \
        i2c-tools \
        redis-server \
        docker-ce-cli \
        docker-compose-plugin \
        python3-pip \
        python3-pil \
        python3-jwt \
        python3-lgpio \
        python3-smbus \
        python3-psutil \
        python3-pyproj \
        python3-geojson \
        python3-requests \
        python3-tenacity \
        python3-aiosqlite \
        python3-transforms3d \
        ros-humble-moveit-servo \
        ros-humble-moveit-resources-panda-description \
        ros-humble-moveit-resources-panda-moveit-config \
        ros-humble-xacro \
        ros-humble-bno055 \
        ros-humble-moveit \
        ros-humble-twist-mux \
        ros-humble-cv-bridge \
        ros-humble-topic-tools \
        ros-humble-navigation2 \
        ros-humble-rplidar-ros \
        ros-humble-nav2-bringup \
        ros-humble-slam-toolbox \
        ros-humble-ros2-control \
        ros-humble-ros2-controllers \
        ros-humble-teleop-twist-joy \
        ros-humble-nmea-navsat-driver \
        ros-humble-robot-localization \
        ros-humble-controller-manager \
        ros-humble-image-transport-plugins \
        ros-humble-topic-based-ros2-control \
        ros-humble-camera-calibration-parsers && \
    DEBIAN_FRONTEND=noninteractive NEEDRESTART_MODE=a apt-get -y -q upgrade && rm -rf /var/lib/apt/lists/*

RUN rm -rf /log/* && \
    git clone https://github.com/clydemcqueen/opencv_cam.git /opt/ros/local/src/opencv_cam && \
    git clone https://github.com/ptrmu/ros2_shared.git /opt/ros/local/src/ros2_shared && \
    bash -x -e -c 'source /opt/ros/humble/setup.bash && cd /opt/ros/local && colcon --log-base /dev/null build --cmake-args -DCMAKE_BUILD_TYPE=Release'


ADD requirements.txt /tmp/requirements.txt
RUN python3 -m pip install -U pip -vvv && python3 -m pip install -r /tmp/requirements.txt && python3 -m pip cache purge && rm -f /tmp/requirements.txt

RUN curl -L https://raw.githubusercontent.com/DFRobot/DFRobot_INA219/master/Python/RespberryPi/DFRobot_INA219.py -o $(python3 -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')/DFRobot_INA219.py

RUN ARCH=$(dpkg --print-architecture); \
    RELEASE=$(curl --silent "https://api.github.com/repos/distribution/distribution/releases/latest" | jq -r .tag_name); \
    curl --silent -o /tmp/registry.tar.gz -L https://github.com/distribution/distribution/releases/download/${RELEASE}/registry_${RELEASE#v}_linux_${ARCH}.tar.gz && \
    tar -xzf /tmp/registry.tar.gz -C /usr/bin/ registry && \
    rm -f /tmp/registry.tar.gz && \
    mkdir -p /etc/docker && \
    curl --silent -o /etc/docker/registry.config.yaml -L https://raw.githubusercontent.com/distribution/distribution-library-image/master/config-example.yml && \
    registry -v

RUN ARCH=$(dpkg --print-architecture); \
    RELEASE=$(curl --silent "https://api.github.com/repos/caddyserver/caddy/releases/latest" | jq -r .tag_name); \
    curl --silent -o /tmp/caddy.tar.gz -L https://github.com/caddyserver/caddy/releases/download/${RELEASE}/caddy_${RELEASE#v}_linux_${ARCH}.tar.gz && \
    tar -xzf /tmp/caddy.tar.gz -C /usr/bin/ caddy && \
    rm -f /tmp/caddy.tar.gz && \
    caddy -v

RUN ARCH=$(dpkg --print-architecture); \
    RELEASE=$(curl --silent "https://api.github.com/repos/grpc-ecosystem/grpc-health-probe/releases/latest" | jq -r .tag_name); \
    curl --silent -o /usr/bin/grpc_health_probe -L https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${RELEASE}/grpc_health_probe-linux-${ARCH} && \
    chmod +x /usr/bin/grpc_health_probe && \
    grpc_health_probe -version

RUN sed -i 's@$ROS_DISTRO@local/install@g' /ros_entrypoint.sh
